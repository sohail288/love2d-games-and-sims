local Unit = require("tactics_battle.world.Unit")
local TurnManager = require("tactics_battle.systems.TurnManager")

describe("TurnManager", function()
    it("orders units by speed", function()
        local slow = Unit.new({ id = "slow", speed = 5 })
        local fast = Unit.new({ id = "fast", speed = 10 })
        local manager = TurnManager.new({ slow, fast })
        assertEquals(manager:currentUnit().id, "fast")
    end)

    it("advances through units in sequence", function()
        local a = Unit.new({ id = "a", speed = 10 })
        local b = Unit.new({ id = "b", speed = 8 })
        local manager = TurnManager.new({ a, b })
        assertEquals(manager:currentUnit().id, "a")
        assertEquals(manager:advance().id, "b")
        assertEquals(manager:advance().id, "a")
    end)

    it("removes defeated units", function()
        local a = Unit.new({ id = "a", speed = 10 })
        local b = Unit.new({ id = "b", speed = 8 })
        local manager = TurnManager.new({ a, b })
        b:takeDamage(999)
        assertTrue(not b:isAlive())
        manager:removeUnit(b)
        assertEquals(manager:unitCount(), 1)
        assertEquals(manager:currentUnit().id, "a")
    end)
end)
